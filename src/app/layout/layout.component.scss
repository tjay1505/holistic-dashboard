.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

}

.menu-button{
  background-color: #2cabeb;
  color: white;
  border: none;
}
:host ::ng-deep .p-menu {
  height: 100%;
  border: none;
  background-color: transparent;
}

/* Hover Effect - Adds scaling and shadow */
:host ::ng-deep .p-menu .p-menuitem:hover {
  background: linear-gradient(135deg, #2cabeb, #005892) !important;
  color: white !important;
  transition: all 0.3s ease-in-out;
  transform: scale(1.03);
  /* Slight zoom-in effect */
  box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.15);
  /* Soft hover shadow */
  border-radius: 5px;
}

/* Focus Effect (When Clicked or Navigated via Keyboard) */
:host ::ng-deep .p-menu .p-menuitem:not(.p-highlight):not(.p-disabled).p-focus>.p-menuitem-content {
  color: white !important;
  background: linear-gradient(135deg, #2cabeb, #005892) !important;
  border: none !important;
  outline: none !important;
}

/* Active (Clicked) Effect - Keeps the Background and Ensures Text is White */
:host ::ng-deep .p-menu .p-menuitem.p-highlight,
:host ::ng-deep .p-menu .p-menuitem.p-highlight .p-menuitem-content {
  background: linear-gradient(135deg, #2cabeb, #005892) !important;
  color: white !important;
  box-shadow: inset 0px 3px 6px rgba(0, 0, 0, 0.2);
  /* Inner shadow for clicked effect */
}

/* Ensuring Inner Text Stays White */
:host ::ng-deep .p-menu .p-menuitem .p-menuitem-content {
  color: white !important;
}

/* Optional: Smoother Transitions */
:host ::ng-deep .p-menu .p-menuitem,
:host ::ng-deep .p-menu .p-menuitem-content {
  transition: all 0.3s ease-in-out;
}


.example-is-mobile .example-toolbar {
  position: fixed;
  z-index: 2;
}

.example-toolbar {
  display: flex;
  background: linear-gradient(135deg, #2cabeb, #005892);
  /* Light to Dark Blue */
  padding: 5px;
  color: white;
}

h1.example-app-name {
  font-weight: bold;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;

  mat-sidenav {
    background: transparent;
    width: fit-content;
    color: white;
  }
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}
